!function(e){function t(t){t.preventDefault();var i=e(".hidden");a?(a=!1,i.slideUp(),e(".button-partners").html("See other partners")):(a=!0,i.slideDown(),e(".button-partners").html("Hide more partners"))}e(".jcarousel").jcarousel({animation:"slow",wrap:"circular"}).jcarouselAutoscroll({interval:5e3,target:"+=1",autostart:!0}),e(".jcarousel-control-prev").on("jcarouselcontrol:active",function(){e(this).removeClass("inactive")}).on("jcarouselcontrol:inactive",function(){e(this).addClass("inactive")}).jcarouselControl({target:"-=1"}),e(".jcarousel-control-next").on("jcarouselcontrol:active",function(){e(this).removeClass("inactive")}).on("jcarouselcontrol:inactive",function(){e(this).addClass("inactive")}).jcarouselControl({target:"+=1"});var a=!1;e(".button-partners").on("click",t),function(){function t(){function t(e){for(var t=0;7>t;)u.photos.push(e.hits[t].webformatURL),t++;o(),i()}u.photos=[];var a=u.word.split(" "),s="https://pixabay.com/api/?key=2223288-d10240586d6b3acc79b68cd15&q=";a.forEach(function(e,t){0!=t?s=s+"+"+e:s+=e}),s+="&image_type=photo";var l=e.ajax({url:s});l.done(t)}function a(e){e.preventDefault(),u.word=c.value,t()}function i(){var e=document.querySelector(".ideas");new Isotope(e,{itemSelector:".ideas__link",transitionDuration:"0.6s",masonry:{columnWidth:".ideas__sizer",gutter:".ideas__sizer",gutter:10,isFitWidth:!0,percentPosition:!0}})}function o(){var t=e("#image-tmpl").html(),a=Handlebars.compile(t),i=a(u),o=document.querySelector(".ideas");o.innerHTML=i}function s(){o(),i(),r.addEventListener("submit",a)}function l(t){t.preventDefault(),f||(d=e('<div class="main"> 	<div class="social-icons"> 		 <div class="col_1_of_f span_1_of_f"><a href="#"> 		    <ul class="facebook"> 		    	<i class="fb"> </i> 		    	<li>Connect with Facebook</li> 		    	<div class="clear"> </div> 		    </ul> 		    </a> 		 </div>	 		 <div class="col_1_of_f span_1_of_f"><a href="#"> 		    <ul class="twitter"> 		      <i class="tw"> </i> 		      <li>Connect with Twitter</li> 		      <div class="clear"> </div> 		    </ul> 		    </a> 		</div> 		<div class="clear"> </div>	       </div>       <h2 class="signup-text">Or Signup with</h2> 		<form> 		   <div class="lable"> 		        <div class="col_1_of_2 span_1_of_2">	<input type="text" class="text" value="First Name" onfocus="this.value = "";" onblur="if (this.value == "") {this.value = "First Name";}" id="active"></div>                 <div class="col_1_of_2 span_1_of_2"><input type="text" class="text" value="Last Name" onfocus="this.value = "";" onblur="if (this.value == "") {this.value = "Last Name";}"></div>                 <div class="clear"> </div> 		   </div> 		   <div class="lable-2"> 		        <input type="text" class="text" value="your@email.com " onfocus="this.value = "";" onblur="if (this.value == "") {this.value = "your@email.com ";}"> 		        <input type="password" class="text" value="Password " onfocus="this.value = "";" onblur="if (this.value == "") {this.value = "Password ";}"> 		   </div> 		   <h3>Bycreating an account, you agree to our <span class="term"><a href="#">Terms & Conditions</a></span></h3> 		   <div class="submit"> 			  <input type="submit" onclick="" value="Create account" > 		   </div> 		   <div class="clear"> </div> 		</form> 	 		</div>'),v=e('<div class="signup-overlay"></div>'),t.stopPropagation(),p.append(v),p.append(d),v.one("click",n),e(".submit input").one("click",n),f=!0)}function n(){d.hide(),v.hide(),f=!1}var c=document.querySelector(".ideas-form__input"),r=document.querySelector(".ideas-form"),u={photos:["img/gallery_1.jpg","img/gallery_2.jpg","img/gallery_3.jpg","img/gallery_4.jpg","img/gallery_5.jpg","img/gallery_6.jpg","img/gallery_7.jpg"],word:"Choose your activity"};document.addEventListener("DOMContentLoaded",s);var d,v,p=e("body"),f=!1;e(".header-top__sign-up").on("click",l),e(".header-top__login").on("click",l),e(".fancybox").fancybox()}()}(jQuery);
//# sourceMappingURL=data:application/json;base64,
